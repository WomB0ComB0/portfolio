services:
  # Next.js application
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
    container_name: portfolio-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
      - NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      - NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID=${NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID}
      - NEXT_PUBLIC_DISCORD_ID=${NEXT_PUBLIC_DISCORD_ID}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - WAKA_TIME_API_KEY=${WAKA_TIME_API_KEY}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - SPOTIFY_REFRESH_TOKEN=${SPOTIFY_REFRESH_TOKEN}
      - SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
      - NEXT_PUBLIC_HASHNODE_TOKEN=${NEXT_PUBLIC_HASHNODE_TOKEN}
      - NEXT_PUBLIC_STRIPE_SECRET_KEY=${NEXT_PUBLIC_STRIPE_SECRET_KEY}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      - NEXT_PUBLIC_STRIPE_WEBHOOK_SECRET=${NEXT_PUBLIC_STRIPE_WEBHOOK_SECRET}
      - NEXT_PUBLIC_GCP_PROJECT_ID=${NEXT_PUBLIC_GCP_PROJECT_ID}
      - NEXT_PUBLIC_GCP_PRIVATE_KEY_ID=${NEXT_PUBLIC_GCP_PRIVATE_KEY_ID}
      - NEXT_PUBLIC_GCP_PRIVATE_KEY=${NEXT_PUBLIC_GCP_PRIVATE_KEY}
      - NEXT_PUBLIC_GCP_CLIENT_EMAIL=${NEXT_PUBLIC_GCP_CLIENT_EMAIL}
      - NEXT_PUBLIC_GCP_CLIENT_ID=${NEXT_PUBLIC_GCP_CLIENT_ID}
      - NEXT_PUBLIC_GCP_CLIENT_X509_CERT_URL=${NEXT_PUBLIC_GCP_CLIENT_X509_CERT_URL}
      - NEXT_PUBLIC_LIVEBLOCKS_PUBLIC_KEY=${NEXT_PUBLIC_LIVEBLOCKS_PUBLIC_KEY}
      - NEXT_PUBLIC_UPSTASH_REDIS_REST_URL=${NEXT_PUBLIC_UPSTASH_REDIS_REST_URL}
      - NEXT_PUBLIC_UPSTASH_REDIS_REST_TOKEN=${NEXT_PUBLIC_UPSTASH_REDIS_REST_TOKEN}
      - CSRF_SECRET=${CSRF_SECRET}
      - ADMIN_API_TOKEN=${ADMIN_API_TOKEN}
      - NEXT_PUBLIC_SANITY_PROJECT_ID=${NEXT_PUBLIC_SANITY_PROJECT_ID}
      - NEXT_PUBLIC_SANITY_DATASET=${NEXT_PUBLIC_SANITY_DATASET:-production}
      - NEXT_PUBLIC_SANITY_API_VERSION=${NEXT_PUBLIC_SANITY_API_VERSION:-2024-10-14}
      - SANITY_API_TOKEN=${SANITY_API_TOKEN}
    networks:
      - app-network
      - observability
    depends_on:
      - jaeger
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Jaeger for OpenTelemetry tracing
  jaeger:
    image: jaegertracing/jaeger:2.1.0
    container_name: portfolio-jaeger
    restart: unless-stopped
    ports:
      # Jaeger UI
      - "16686:16686"
      # OTLP gRPC
      - "4317:4317"
      # OTLP HTTP
      - "4318:4318"
      # Jaeger Collector gRPC
      - "14250:14250"
      # Jaeger Collector HTTP
      - "14268:14268"
      # Zipkin compatible endpoint
      - "9411:9411"
      # Serve configs (for agent)
      - "5778:5778"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - observability

  # n8n automation workflow
  n8n:
    image: n8nio/n8n
    container_name: portfolio-n8n
    restart: unless-stopped
    user: "1000:1000"
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/New_York
      # Pass through API keys for AI models
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      # Sanity credentials
      - SANITY_PROJECT_ID=${NEXT_PUBLIC_SANITY_PROJECT_ID}
      - SANITY_DATASET=${NEXT_PUBLIC_SANITY_DATASET:-production}
      - SANITY_API_TOKEN=${SANITY_API_TOKEN}
    volumes:
      - ./n8n_data:/home/node/.n8n
      - ./n8n_workflows:/home/node/workflows
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  observability:
    driver: bridge
